/*******************************************************************************
 * Copyright (c) 2015 Torsten Juergeleit.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 * 
 * The Eclipse Public License is available at
 *    http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 *    http://www.eclipse.org/org/documents/edl-v10.html.
 * 
 * Contributors:
 *     Torsten Juergeleit - initial API and implementation
 *******************************************************************************/
grammar org.vaulttec.isis.script.Isis with org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations

generate dsl "http://vaulttec.org/dsl/Isis"

IsisFile:
	package=IsisPackageDeclaration
	importSection=XImportSection?
	declaration=IsisTypeDeclaration;

IsisPackageDeclaration:
	'package' name=QualifiedName;

IsisTypeDeclaration:
	IsisEntity | IsisService;

IsisEntity:
	=> (annotations+=XAnnotation*
	'entity') name=ID ('extends' superType=JvmTypeReference)? '{'
	(injections+=IsisInjection | properties+=IsisProperty | collections+=IsisCollection |
	actions+=IsisAction | uiHints+=IsisUiHint)*
	'}';

IsisService:
	annotations+=XAnnotation*
	'service' name=ID ('extends' superType=JvmTypeReference)? '{'
	(injections+=IsisInjection | actions+=IsisAction)*
	'}';

IsisInjection:
	'inject' type=JvmTypeReference name=ID;

IsisEvent:
	'event' name=ID;

IsisProperty:
	=> (annotations+=XAnnotation*
	'property') type=JvmTypeReference name=ID ('{'
	(features+=IsisPropertyFeature | events+=IsisEvent)*
	'}')?;

IsisPropertyFeature:
	annotations+=XAnnotation*
	type=IsisPropertyFeatureType expression=XBlockExpression;

enum IsisPropertyFeatureType:
	Hide='hide' | Disable='disable' | Validate='validate' | Derived='derived' |
	Modify='modify' | Clear='clear' | Choices='choices' | Complete='complete' | Default='default';

IsisCollection:
	=> (annotations+=XAnnotation*
	'collection') (type=JvmTypeReference)? name=ID '=' init=XExpression ('{'
	(features+=IsisCollectionFeature | events+=IsisEvent)*
	'}')?;

IsisCollectionFeature:
	annotations+=XAnnotation*
	type=IsisCollectionFeatureType expression=XBlockExpression;

enum IsisCollectionFeatureType:
	Hide='hide' | Disable='disable' | ValidateAddTo='validateAddTo' | ValidateRemoveFrom='validateRemoveFrom' |
	Derived='derived' | AddTo='addTo' | RemoveFrom='removeFrom';

IsisAction:
	=> (annotations+=XAnnotation*
	'action') type=JvmTypeReference name=ID '{'
	(parameters+=IsisActionParameter | features+=IsisActionFeature | events+=IsisEvent)*
	'}';

IsisActionParameter:
	=> (annotations+=XAnnotation*
	'parameter') type=FullJvmFormalParameter ('{'
	(features+=IsisActionParameterFeature)*
	'}')?;

IsisActionParameterFeature:
	annotations+=XAnnotation*
	type=IsisActionParameterFeatureType expression=XBlockExpression;

enum IsisActionParameterFeatureType:
	Default='default' | Choices='choices' | Complete='complete' | Validate='validate';

IsisActionFeature:
	type=IsisActionFeatureType expression=XBlockExpression;

enum IsisActionFeatureType:
	Body='body' | Hide='hide' | Disable='disable' | Validate='validate';

IsisUiHint:
	type=IsisUiHintType expression=XBlockExpression;

enum IsisUiHintType:
	Title='title' | IconName='iconName' | CssClass='cssClass';
